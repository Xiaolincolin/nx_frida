# -*- encoding: utf-8 -*-
# @ModuleName: hash_code
# @Function:
# @Author:
# @Time: 2025/7/18 10:12

def java_string_hashcode(s: bytes) -> int:
    h = 0
    for b in s:
        h = (31 * h + b) & 0xFFFFFFFF  # 模拟 Java 的 int 溢出行为
    if h >= 0x80000000:  # 转为带符号
        h -= 0x100000000
    return h


if __name__ == '__main__':
    data = "308203673082024fa003020102020448b3c0d5300d06092a864886f70d01010b05003064310b30090603550406130238363110300e060355040813076265696a696e67310e300c060355040713056368696e613110300e060355040a130774656e63656e743110300e060355040b130774656e63656e74310f300d0603550403130667756f63616f301e170d3230303232313037303033325a170d3435303231343037303033325a3064310b30090603550406130238363110300e060355040813076265696a696e67310e300c060355040713056368696e613110300e060355040a130774656e63656e743110300e060355040b130774656e63656e74310f300d0603550403130667756f63616f30820122300d06092a864886f70d01010105000382010f003082010a0282010100997902e92246b82f7965c6c84d0ca61db683351f3d142271524497b84d45223dabdc905fb21a492f44688574a188b88312dc492b616ddb9e7e49d6476ededb0d47f3694f4dda06828a0e2cfd0e3154d1bfb7339c49436a7dda3b269ae7c963bd80141d0e9f8312c71df358727887625a800765591d82deeacc6839ec2a5613de266e72e06800e3d1cccb532ec2e8f9992b98866d3273158c7eb7900cfed2a41df6d4d0912384f99e035e5463c0d4996bda4084d0f3252cc65fb19106f9a8984b0d03b54420aaf2d20c981f959ac5458c909963381d65c53893bcd158a1192bfc0cabb898cff6cbbd0a360ac4d1c7330a9553530b809994bed6457235deb9edbb0203010001a321301f301d0603551d0e04160414989363273015b580239996eb35bdb79b53fda95e300d06092a864886f70d01010b050003820101008a8631e8c6fcfe12b9ca1b522bf058ab69b73ce2557dd0d63087484d66021d2ba874d5d09b750483f9d93c4527e9b4f14ef1a0edc46eafc1c74f0f057379b930dd16ab849d6ee13c1c9261a269fbda70d233db339cd0c68889cca05e515fc6171466dba4e3d757889fb59abbacd3f3249a7ecfcd37aabb91a3ff44b81c14004b1b74dda6c1dcc6ae026f3db96c480447398b6f3dc881b200ecf049cf97feabeba454fe5451a149871700bd07ea539c9369279b15579f67704e2dc05395bade57778e7be7a40368839e3b81e5dec1c0d273e76faa564950f06afb0f855e101190810a6245e4765f4e690d75e7b32b80a1a70ae5e4c62c4e1bf31d09fe79181853"
    x509_bytes = bytes.fromhex(data)
    print(java_string_hashcode(x509_bytes))  # 输出与 Java 一致的 hashCode
